// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LzsCvDataProtoCpp.proto

#include "LzsCvDataProtoCpp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_LzsCvDataProtoCpp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameInfo_TargetEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameList_GameEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RGBColor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetInfo_WatchEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UScalar2d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WatchInfo_CharacterEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WatchInfo_AdditionalOffsetEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LzsCvDataProtoCpp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WatchInfo_WatchArea;
}  // namespace protobuf_LzsCvDataProtoCpp_2eproto
namespace Lazysplits {
namespace Proto {
class UScalar2dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UScalar2d>
      _instance;
} _UScalar2d_default_instance_;
class RGBColorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RGBColor>
      _instance;
} _RGBColor_default_instance_;
class GameList_GameEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameList_GameEntry>
      _instance;
} _GameList_GameEntry_default_instance_;
class GameListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameList>
      _instance;
} _GameList_default_instance_;
class GameInfo_TargetEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameInfo_TargetEntry>
      _instance;
} _GameInfo_TargetEntry_default_instance_;
class GameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameInfo>
      _instance;
} _GameInfo_default_instance_;
class TargetInfo_WatchEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetInfo_WatchEntry>
      _instance;
} _TargetInfo_WatchEntry_default_instance_;
class TargetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetInfo>
      _instance;
} _TargetInfo_default_instance_;
class WatchInfo_WatchAreaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchInfo_WatchArea>
      _instance;
} _WatchInfo_WatchArea_default_instance_;
class WatchInfo_CharacterEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchInfo_CharacterEntry>
      _instance;
} _WatchInfo_CharacterEntry_default_instance_;
class WatchInfo_AdditionalOffsetEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchInfo_AdditionalOffsetEntry>
      _instance;
} _WatchInfo_AdditionalOffsetEntry_default_instance_;
class WatchInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchInfo>
      _instance;
} _WatchInfo_default_instance_;
}  // namespace Proto
}  // namespace Lazysplits
namespace protobuf_LzsCvDataProtoCpp_2eproto {
static void InitDefaultsUScalar2d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_UScalar2d_default_instance_;
    new (ptr) ::Lazysplits::Proto::UScalar2d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::UScalar2d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UScalar2d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUScalar2d}, {}};

static void InitDefaultsRGBColor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_RGBColor_default_instance_;
    new (ptr) ::Lazysplits::Proto::RGBColor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::RGBColor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RGBColor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRGBColor}, {}};

static void InitDefaultsGameList_GameEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_GameList_GameEntry_default_instance_;
    new (ptr) ::Lazysplits::Proto::GameList_GameEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::GameList_GameEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameList_GameEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameList_GameEntry}, {}};

static void InitDefaultsGameList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_GameList_default_instance_;
    new (ptr) ::Lazysplits::Proto::GameList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::GameList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameList}, {
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameList_GameEntry.base,}};

static void InitDefaultsGameInfo_TargetEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_GameInfo_TargetEntry_default_instance_;
    new (ptr) ::Lazysplits::Proto::GameInfo_TargetEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::GameInfo_TargetEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameInfo_TargetEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameInfo_TargetEntry}, {}};

static void InitDefaultsGameInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_GameInfo_default_instance_;
    new (ptr) ::Lazysplits::Proto::GameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::GameInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameInfo}, {
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameInfo_TargetEntry.base,}};

static void InitDefaultsTargetInfo_WatchEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_TargetInfo_WatchEntry_default_instance_;
    new (ptr) ::Lazysplits::Proto::TargetInfo_WatchEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::TargetInfo_WatchEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetInfo_WatchEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetInfo_WatchEntry}, {}};

static void InitDefaultsTargetInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_TargetInfo_default_instance_;
    new (ptr) ::Lazysplits::Proto::TargetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::TargetInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TargetInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTargetInfo}, {
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_TargetInfo_WatchEntry.base,}};

static void InitDefaultsWatchInfo_WatchArea() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_WatchInfo_WatchArea_default_instance_;
    new (ptr) ::Lazysplits::Proto::WatchInfo_WatchArea();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::WatchInfo_WatchArea::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WatchInfo_WatchArea =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWatchInfo_WatchArea}, {
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_UScalar2d.base,}};

static void InitDefaultsWatchInfo_CharacterEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_WatchInfo_CharacterEntry_default_instance_;
    new (ptr) ::Lazysplits::Proto::WatchInfo_CharacterEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::WatchInfo_CharacterEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WatchInfo_CharacterEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWatchInfo_CharacterEntry}, {}};

static void InitDefaultsWatchInfo_AdditionalOffsetEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_WatchInfo_AdditionalOffsetEntry_default_instance_;
    new (ptr) ::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WatchInfo_AdditionalOffsetEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWatchInfo_AdditionalOffsetEntry}, {
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_UScalar2d.base,}};

static void InitDefaultsWatchInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Lazysplits::Proto::_WatchInfo_default_instance_;
    new (ptr) ::Lazysplits::Proto::WatchInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lazysplits::Proto::WatchInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_WatchInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsWatchInfo}, {
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_UScalar2d.base,
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_WatchArea.base,
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_RGBColor.base,
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_CharacterEntry.base,
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_AdditionalOffsetEntry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UScalar2d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RGBColor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameList_GameEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameInfo_TargetEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetInfo_WatchEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WatchInfo_WatchArea.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WatchInfo_CharacterEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WatchInfo_AdditionalOffsetEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WatchInfo.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::UScalar2d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::UScalar2d, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::UScalar2d, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::RGBColor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::RGBColor, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::RGBColor, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::RGBColor, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameList_GameEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameList_GameEntry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameList_GameEntry, relative_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameList, games_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameInfo_TargetEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameInfo_TargetEntry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameInfo_TargetEntry, relative_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::GameInfo, targets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, relative_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, action_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, persistence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo_WatchEntry, persistence_max_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo, split_offset_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::TargetInfo, watches_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_WatchArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_WatchArea, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_WatchArea, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_CharacterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_CharacterEntry, character_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_CharacterEntry, character_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_CharacterEntry, x_padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_CharacterEntry, y_padding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry, character_length_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, base_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, additional_area_padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, base_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, img_relative_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, character_justify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, character_z_order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, characters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lazysplits::Proto::WatchInfo, additional_offset_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Lazysplits::Proto::UScalar2d)},
  { 7, -1, sizeof(::Lazysplits::Proto::RGBColor)},
  { 15, -1, sizeof(::Lazysplits::Proto::GameList_GameEntry)},
  { 22, -1, sizeof(::Lazysplits::Proto::GameList)},
  { 28, -1, sizeof(::Lazysplits::Proto::GameInfo_TargetEntry)},
  { 35, -1, sizeof(::Lazysplits::Proto::GameInfo)},
  { 42, -1, sizeof(::Lazysplits::Proto::TargetInfo_WatchEntry)},
  { 54, -1, sizeof(::Lazysplits::Proto::TargetInfo)},
  { 63, -1, sizeof(::Lazysplits::Proto::WatchInfo_WatchArea)},
  { 70, -1, sizeof(::Lazysplits::Proto::WatchInfo_CharacterEntry)},
  { 79, -1, sizeof(::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry)},
  { 86, -1, sizeof(::Lazysplits::Proto::WatchInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_UScalar2d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_RGBColor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_GameList_GameEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_GameList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_GameInfo_TargetEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_GameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_TargetInfo_WatchEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_TargetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_WatchInfo_WatchArea_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_WatchInfo_CharacterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_WatchInfo_AdditionalOffsetEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lazysplits::Proto::_WatchInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "LzsCvDataProtoCpp.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027LzsCvDataProtoCpp.proto\022\020Lazysplits.Pr"
      "oto\"!\n\tUScalar2d\022\t\n\001x\030\001 \001(\021\022\t\n\001y\030\002 \001(\021\"+"
      "\n\010RGBColor\022\t\n\001R\030\001 \001(\r\022\t\n\001G\030\002 \001(\r\022\t\n\001B\030\003 "
      "\001(\r\"q\n\010GameList\0223\n\005games\030\001 \003(\0132$.Lazyspl"
      "its.Proto.GameList.GameEntry\0320\n\tGameEntr"
      "y\022\014\n\004name\030\001 \001(\t\022\025\n\rrelative_path\030\002 \001(\t\"\205"
      "\001\n\010GameInfo\022\014\n\004name\030\001 \001(\t\0227\n\007targets\030\002 \003"
      "(\0132&.Lazysplits.Proto.GameInfo.TargetEnt"
      "ry\0322\n\013TargetEntry\022\014\n\004name\030\001 \001(\t\022\025\n\rrelat"
      "ive_path\030\002 \001(\t\"\361\002\n\nTargetInfo\022\014\n\004name\030\001 "
      "\001(\t\022*\n\004type\030\002 \001(\0162\034.Lazysplits.Proto.Tar"
      "getType\022\027\n\017split_offset_ms\030\003 \001(\021\0228\n\007watc"
      "hes\030\004 \003(\0132\'.Lazysplits.Proto.TargetInfo."
      "WatchEntry\032\325\001\n\nWatchEntry\022\014\n\004name\030\001 \001(\t\022"
      "\025\n\rrelative_path\030\002 \001(\t\022\r\n\005index\030\003 \001(\021\022-\n"
      "\006action\030\004 \001(\0162\035.Lazysplits.Proto.WatchAc"
      "tion\022\022\n\naction_val\030\005 \001(\r\0227\n\013persistence\030"
      "\006 \001(\0162\".Lazysplits.Proto.WatchPersistenc"
      "e\022\027\n\017persistence_max\030\007 \001(\r\"\355\006\n\tWatchInfo"
      "\022\014\n\004name\030\001 \001(\t\022)\n\004type\030\002 \001(\0162\033.Lazysplit"
      "s.Proto.WatchType\0224\n\017base_dimensions\030\003 \001"
      "(\0132\033.Lazysplits.Proto.UScalar2d\0223\n\004area\030"
      "\004 \001(\0132%.Lazysplits.Proto.WatchInfo.Watch"
      "Area\022\037\n\027additional_area_padding\030\013 \001(\r\022\026\n"
      "\016base_threshold\030\014 \001(\002\022)\n\005color\030\005 \001(\0132\032.L"
      "azysplits.Proto.RGBColor\022\031\n\021img_relative"
      "_path\030\006 \001(\t\022=\n\021character_justify\030\007 \001(\0162\""
      ".Lazysplits.Proto.CharacterJustify\022<\n\021ch"
      "aracter_z_order\030\010 \001(\0162!.Lazysplits.Proto"
      ".CharacterZOrder\022>\n\ncharacters\030\t \003(\0132*.L"
      "azysplits.Proto.WatchInfo.CharacterEntry"
      "\022L\n\021additional_offset\030\n \003(\01321.Lazysplits"
      ".Proto.WatchInfo.AdditionalOffsetEntry\032`"
      "\n\tWatchArea\022(\n\003loc\030\001 \001(\0132\033.Lazysplits.Pr"
      "oto.UScalar2d\022)\n\004size\030\002 \001(\0132\033.Lazysplits"
      ".Proto.UScalar2d\032f\n\016CharacterEntry\022\027\n\017ch"
      "aracter_index\030\001 \001(\r\022\025\n\rcharacter_val\030\002 \001"
      "(\t\022\021\n\tx_padding\030\003 \001(\021\022\021\n\ty_padding\030\004 \001(\021"
      "\032h\n\025AdditionalOffsetEntry\022\"\n\032character_l"
      "ength_threshold\030\001 \001(\r\022+\n\006offset\030\002 \001(\0132\033."
      "Lazysplits.Proto.UScalar2d*Y\n\nTargetType"
      "\022\016\n\nTGT_UNUSED\020\000\022\r\n\tTGT_RESET\020\001\022\r\n\tTGT_S"
      "TART\020\002\022\020\n\014TGT_STANDARD\020\003\022\013\n\007TGT_END\020\004*S\n"
      "\tWatchType\022\r\n\tWT_UNUSED\020\000\022\014\n\010WT_COLOR\020\001\022"
      "\023\n\017WT_IMAGE_STATIC\020\002\022\024\n\020WT_CHARACTER_SET"
      "\020\003*p\n\013WatchAction\022\r\n\tWA_UNUSED\020\000\022\026\n\022WA_I"
      "NCREMENT_INDEX\020\001\022\026\n\022WA_DECREMENT_INDEX\020\002"
      "\022\021\n\rWA_GOTO_INDEX\020\003\022\017\n\013WA_COMPLETE\020\004*A\n\020"
      "WatchPersistence\022\013\n\007WP_NONE\020\000\022\022\n\016WP_SPEC"
      "IFY_MAX\020\001\022\014\n\010WP_TOTAL\020\002*\207\001\n\020CharacterJus"
      "tify\022\034\n\030CHARACTER_JUSTIFY_UNUSED\020\000\022\032\n\026CH"
      "ARACTER_JUSTIFY_LEFT\020\001\022\033\n\027CHARACTER_JUST"
      "IFY_RIGHT\020\002\022\034\n\030CHARACTER_JUSTIFY_CENTER\020"
      "\003*g\n\017CharacterZOrder\022\026\n\022CHARACTER_Z_UNUS"
      "ED\020\000\022\035\n\031CHARACTER_Z_LEFT_TO_RIGHT\020\001\022\035\n\031C"
      "HARACTER_Z_RIGHT_TO_LEFT\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2234);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LzsCvDataProtoCpp.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_LzsCvDataProtoCpp_2eproto
namespace Lazysplits {
namespace Proto {
const ::google::protobuf::EnumDescriptor* TargetType_descriptor() {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LzsCvDataProtoCpp_2eproto::file_level_enum_descriptors[0];
}
bool TargetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WatchType_descriptor() {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LzsCvDataProtoCpp_2eproto::file_level_enum_descriptors[1];
}
bool WatchType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WatchAction_descriptor() {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LzsCvDataProtoCpp_2eproto::file_level_enum_descriptors[2];
}
bool WatchAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WatchPersistence_descriptor() {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LzsCvDataProtoCpp_2eproto::file_level_enum_descriptors[3];
}
bool WatchPersistence_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CharacterJustify_descriptor() {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LzsCvDataProtoCpp_2eproto::file_level_enum_descriptors[4];
}
bool CharacterJustify_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CharacterZOrder_descriptor() {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LzsCvDataProtoCpp_2eproto::file_level_enum_descriptors[5];
}
bool CharacterZOrder_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UScalar2d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UScalar2d::kXFieldNumber;
const int UScalar2d::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UScalar2d::UScalar2d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_UScalar2d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.UScalar2d)
}
UScalar2d::UScalar2d(const UScalar2d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.UScalar2d)
}

void UScalar2d::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

UScalar2d::~UScalar2d() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.UScalar2d)
  SharedDtor();
}

void UScalar2d::SharedDtor() {
}

void UScalar2d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UScalar2d::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UScalar2d& UScalar2d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_UScalar2d.base);
  return *internal_default_instance();
}


void UScalar2d::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.UScalar2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool UScalar2d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.UScalar2d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.UScalar2d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.UScalar2d)
  return false;
#undef DO_
}

void UScalar2d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.UScalar2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->x(), output);
  }

  // sint32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.UScalar2d)
}

::google::protobuf::uint8* UScalar2d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.UScalar2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->x(), target);
  }

  // sint32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.UScalar2d)
  return target;
}

size_t UScalar2d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.UScalar2d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x());
  }

  // sint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UScalar2d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.UScalar2d)
  GOOGLE_DCHECK_NE(&from, this);
  const UScalar2d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UScalar2d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.UScalar2d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.UScalar2d)
    MergeFrom(*source);
  }
}

void UScalar2d::MergeFrom(const UScalar2d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.UScalar2d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void UScalar2d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.UScalar2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UScalar2d::CopyFrom(const UScalar2d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.UScalar2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UScalar2d::IsInitialized() const {
  return true;
}

void UScalar2d::Swap(UScalar2d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UScalar2d::InternalSwap(UScalar2d* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UScalar2d::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RGBColor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RGBColor::kRFieldNumber;
const int RGBColor::kGFieldNumber;
const int RGBColor::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RGBColor::RGBColor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_RGBColor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.RGBColor)
}
RGBColor::RGBColor(const RGBColor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&r_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.RGBColor)
}

void RGBColor::SharedCtor() {
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
}

RGBColor::~RGBColor() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.RGBColor)
  SharedDtor();
}

void RGBColor::SharedDtor() {
}

void RGBColor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RGBColor::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RGBColor& RGBColor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_RGBColor.base);
  return *internal_default_instance();
}


void RGBColor::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.RGBColor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
  _internal_metadata_.Clear();
}

bool RGBColor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.RGBColor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 R = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 G = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 B = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.RGBColor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.RGBColor)
  return false;
#undef DO_
}

void RGBColor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.RGBColor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 R = 1;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->r(), output);
  }

  // uint32 G = 2;
  if (this->g() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->g(), output);
  }

  // uint32 B = 3;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->b(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.RGBColor)
}

::google::protobuf::uint8* RGBColor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.RGBColor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 R = 1;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->r(), target);
  }

  // uint32 G = 2;
  if (this->g() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->g(), target);
  }

  // uint32 B = 3;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->b(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.RGBColor)
  return target;
}

size_t RGBColor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.RGBColor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 R = 1;
  if (this->r() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->r());
  }

  // uint32 G = 2;
  if (this->g() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->g());
  }

  // uint32 B = 3;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RGBColor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.RGBColor)
  GOOGLE_DCHECK_NE(&from, this);
  const RGBColor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RGBColor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.RGBColor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.RGBColor)
    MergeFrom(*source);
  }
}

void RGBColor::MergeFrom(const RGBColor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.RGBColor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.g() != 0) {
    set_g(from.g());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void RGBColor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.RGBColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RGBColor::CopyFrom(const RGBColor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.RGBColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RGBColor::IsInitialized() const {
  return true;
}

void RGBColor::Swap(RGBColor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RGBColor::InternalSwap(RGBColor* other) {
  using std::swap;
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RGBColor::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameList_GameEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameList_GameEntry::kNameFieldNumber;
const int GameList_GameEntry::kRelativePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameList_GameEntry::GameList_GameEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameList_GameEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.GameList.GameEntry)
}
GameList_GameEntry::GameList_GameEntry(const GameList_GameEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relative_path().size() > 0) {
    relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_path_);
  }
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.GameList.GameEntry)
}

void GameList_GameEntry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GameList_GameEntry::~GameList_GameEntry() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.GameList.GameEntry)
  SharedDtor();
}

void GameList_GameEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameList_GameEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameList_GameEntry::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameList_GameEntry& GameList_GameEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameList_GameEntry.base);
  return *internal_default_instance();
}


void GameList_GameEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.GameList.GameEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GameList_GameEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.GameList.GameEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.GameList.GameEntry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string relative_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relative_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->relative_path().data(), static_cast<int>(this->relative_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.GameList.GameEntry.relative_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.GameList.GameEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.GameList.GameEntry)
  return false;
#undef DO_
}

void GameList_GameEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.GameList.GameEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameList.GameEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relative_path().data(), static_cast<int>(this->relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameList.GameEntry.relative_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->relative_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.GameList.GameEntry)
}

::google::protobuf::uint8* GameList_GameEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.GameList.GameEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameList.GameEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relative_path().data(), static_cast<int>(this->relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameList.GameEntry.relative_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->relative_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.GameList.GameEntry)
  return target;
}

size_t GameList_GameEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.GameList.GameEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->relative_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameList_GameEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.GameList.GameEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const GameList_GameEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameList_GameEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.GameList.GameEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.GameList.GameEntry)
    MergeFrom(*source);
  }
}

void GameList_GameEntry::MergeFrom(const GameList_GameEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.GameList.GameEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.relative_path().size() > 0) {

    relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_path_);
  }
}

void GameList_GameEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.GameList.GameEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameList_GameEntry::CopyFrom(const GameList_GameEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.GameList.GameEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameList_GameEntry::IsInitialized() const {
  return true;
}

void GameList_GameEntry::Swap(GameList_GameEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameList_GameEntry::InternalSwap(GameList_GameEntry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  relative_path_.Swap(&other->relative_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameList_GameEntry::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameList::kGamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameList::GameList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.GameList)
}
GameList::GameList(const GameList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      games_(from.games_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.GameList)
}

void GameList::SharedCtor() {
}

GameList::~GameList() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.GameList)
  SharedDtor();
}

void GameList::SharedDtor() {
}

void GameList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameList::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameList& GameList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameList.base);
  return *internal_default_instance();
}


void GameList::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.GameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  games_.Clear();
  _internal_metadata_.Clear();
}

bool GameList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.GameList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Lazysplits.Proto.GameList.GameEntry games = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_games()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.GameList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.GameList)
  return false;
#undef DO_
}

void GameList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.GameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Lazysplits.Proto.GameList.GameEntry games = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->games_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->games(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.GameList)
}

::google::protobuf::uint8* GameList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.GameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Lazysplits.Proto.GameList.GameEntry games = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->games_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->games(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.GameList)
  return target;
}

size_t GameList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.GameList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lazysplits.Proto.GameList.GameEntry games = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->games_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->games(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.GameList)
  GOOGLE_DCHECK_NE(&from, this);
  const GameList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.GameList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.GameList)
    MergeFrom(*source);
  }
}

void GameList::MergeFrom(const GameList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.GameList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  games_.MergeFrom(from.games_);
}

void GameList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.GameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameList::CopyFrom(const GameList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.GameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameList::IsInitialized() const {
  return true;
}

void GameList::Swap(GameList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameList::InternalSwap(GameList* other) {
  using std::swap;
  CastToBase(&games_)->InternalSwap(CastToBase(&other->games_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameList::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameInfo_TargetEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameInfo_TargetEntry::kNameFieldNumber;
const int GameInfo_TargetEntry::kRelativePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameInfo_TargetEntry::GameInfo_TargetEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameInfo_TargetEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.GameInfo.TargetEntry)
}
GameInfo_TargetEntry::GameInfo_TargetEntry(const GameInfo_TargetEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relative_path().size() > 0) {
    relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_path_);
  }
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.GameInfo.TargetEntry)
}

void GameInfo_TargetEntry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GameInfo_TargetEntry::~GameInfo_TargetEntry() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.GameInfo.TargetEntry)
  SharedDtor();
}

void GameInfo_TargetEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameInfo_TargetEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameInfo_TargetEntry::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameInfo_TargetEntry& GameInfo_TargetEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameInfo_TargetEntry.base);
  return *internal_default_instance();
}


void GameInfo_TargetEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.GameInfo.TargetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GameInfo_TargetEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.GameInfo.TargetEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.GameInfo.TargetEntry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string relative_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relative_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->relative_path().data(), static_cast<int>(this->relative_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.GameInfo.TargetEntry.relative_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.GameInfo.TargetEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.GameInfo.TargetEntry)
  return false;
#undef DO_
}

void GameInfo_TargetEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.GameInfo.TargetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameInfo.TargetEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relative_path().data(), static_cast<int>(this->relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameInfo.TargetEntry.relative_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->relative_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.GameInfo.TargetEntry)
}

::google::protobuf::uint8* GameInfo_TargetEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.GameInfo.TargetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameInfo.TargetEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relative_path().data(), static_cast<int>(this->relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameInfo.TargetEntry.relative_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->relative_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.GameInfo.TargetEntry)
  return target;
}

size_t GameInfo_TargetEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.GameInfo.TargetEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->relative_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameInfo_TargetEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.GameInfo.TargetEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const GameInfo_TargetEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameInfo_TargetEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.GameInfo.TargetEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.GameInfo.TargetEntry)
    MergeFrom(*source);
  }
}

void GameInfo_TargetEntry::MergeFrom(const GameInfo_TargetEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.GameInfo.TargetEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.relative_path().size() > 0) {

    relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_path_);
  }
}

void GameInfo_TargetEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.GameInfo.TargetEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameInfo_TargetEntry::CopyFrom(const GameInfo_TargetEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.GameInfo.TargetEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameInfo_TargetEntry::IsInitialized() const {
  return true;
}

void GameInfo_TargetEntry::Swap(GameInfo_TargetEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameInfo_TargetEntry::InternalSwap(GameInfo_TargetEntry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  relative_path_.Swap(&other->relative_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameInfo_TargetEntry::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameInfo::kNameFieldNumber;
const int GameInfo::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameInfo::GameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.GameInfo)
}
GameInfo::GameInfo(const GameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      targets_(from.targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.GameInfo)
}

void GameInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GameInfo::~GameInfo() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.GameInfo)
  SharedDtor();
}

void GameInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameInfo::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameInfo& GameInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_GameInfo.base);
  return *internal_default_instance();
}


void GameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.GameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.GameInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.GameInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lazysplits.Proto.GameInfo.TargetEntry targets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_targets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.GameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.GameInfo)
  return false;
#undef DO_
}

void GameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.GameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Lazysplits.Proto.GameInfo.TargetEntry targets = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->targets(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.GameInfo)
}

::google::protobuf::uint8* GameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.GameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.GameInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Lazysplits.Proto.GameInfo.TargetEntry targets = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->targets(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.GameInfo)
  return target;
}

size_t GameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.GameInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lazysplits.Proto.GameInfo.TargetEntry targets = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->targets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.GameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.GameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.GameInfo)
    MergeFrom(*source);
  }
}

void GameInfo::MergeFrom(const GameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.GameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets_.MergeFrom(from.targets_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.GameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameInfo::CopyFrom(const GameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.GameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameInfo::IsInitialized() const {
  return true;
}

void GameInfo::Swap(GameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameInfo::InternalSwap(GameInfo* other) {
  using std::swap;
  CastToBase(&targets_)->InternalSwap(CastToBase(&other->targets_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameInfo::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetInfo_WatchEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetInfo_WatchEntry::kNameFieldNumber;
const int TargetInfo_WatchEntry::kRelativePathFieldNumber;
const int TargetInfo_WatchEntry::kIndexFieldNumber;
const int TargetInfo_WatchEntry::kActionFieldNumber;
const int TargetInfo_WatchEntry::kActionValFieldNumber;
const int TargetInfo_WatchEntry::kPersistenceFieldNumber;
const int TargetInfo_WatchEntry::kPersistenceMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetInfo_WatchEntry::TargetInfo_WatchEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_TargetInfo_WatchEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.TargetInfo.WatchEntry)
}
TargetInfo_WatchEntry::TargetInfo_WatchEntry(const TargetInfo_WatchEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relative_path().size() > 0) {
    relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_path_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&persistence_max_) -
    reinterpret_cast<char*>(&index_)) + sizeof(persistence_max_));
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.TargetInfo.WatchEntry)
}

void TargetInfo_WatchEntry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persistence_max_) -
      reinterpret_cast<char*>(&index_)) + sizeof(persistence_max_));
}

TargetInfo_WatchEntry::~TargetInfo_WatchEntry() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.TargetInfo.WatchEntry)
  SharedDtor();
}

void TargetInfo_WatchEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargetInfo_WatchEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetInfo_WatchEntry::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetInfo_WatchEntry& TargetInfo_WatchEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_TargetInfo_WatchEntry.base);
  return *internal_default_instance();
}


void TargetInfo_WatchEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relative_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persistence_max_) -
      reinterpret_cast<char*>(&index_)) + sizeof(persistence_max_));
  _internal_metadata_.Clear();
}

bool TargetInfo_WatchEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.TargetInfo.WatchEntry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string relative_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relative_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->relative_path().data(), static_cast<int>(this->relative_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.TargetInfo.WatchEntry.relative_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.WatchAction action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::Lazysplits::Proto::WatchAction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.WatchPersistence persistence = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_persistence(static_cast< ::Lazysplits::Proto::WatchPersistence >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 persistence_max = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persistence_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.TargetInfo.WatchEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.TargetInfo.WatchEntry)
  return false;
#undef DO_
}

void TargetInfo_WatchEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.TargetInfo.WatchEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relative_path().data(), static_cast<int>(this->relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.TargetInfo.WatchEntry.relative_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->relative_path(), output);
  }

  // sint32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->index(), output);
  }

  // .Lazysplits.Proto.WatchAction action = 4;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action(), output);
  }

  // uint32 action_val = 5;
  if (this->action_val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->action_val(), output);
  }

  // .Lazysplits.Proto.WatchPersistence persistence = 6;
  if (this->persistence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->persistence(), output);
  }

  // uint32 persistence_max = 7;
  if (this->persistence_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->persistence_max(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.TargetInfo.WatchEntry)
}

::google::protobuf::uint8* TargetInfo_WatchEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.TargetInfo.WatchEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relative_path().data(), static_cast<int>(this->relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.TargetInfo.WatchEntry.relative_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->relative_path(), target);
  }

  // sint32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->index(), target);
  }

  // .Lazysplits.Proto.WatchAction action = 4;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->action(), target);
  }

  // uint32 action_val = 5;
  if (this->action_val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->action_val(), target);
  }

  // .Lazysplits.Proto.WatchPersistence persistence = 6;
  if (this->persistence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->persistence(), target);
  }

  // uint32 persistence_max = 7;
  if (this->persistence_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->persistence_max(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.TargetInfo.WatchEntry)
  return target;
}

size_t TargetInfo_WatchEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string relative_path = 2;
  if (this->relative_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->relative_path());
  }

  // sint32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->index());
  }

  // .Lazysplits.Proto.WatchAction action = 4;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // uint32 action_val = 5;
  if (this->action_val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_val());
  }

  // .Lazysplits.Proto.WatchPersistence persistence = 6;
  if (this->persistence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->persistence());
  }

  // uint32 persistence_max = 7;
  if (this->persistence_max() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->persistence_max());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetInfo_WatchEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetInfo_WatchEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetInfo_WatchEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.TargetInfo.WatchEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.TargetInfo.WatchEntry)
    MergeFrom(*source);
  }
}

void TargetInfo_WatchEntry::MergeFrom(const TargetInfo_WatchEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.relative_path().size() > 0) {

    relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_path_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.action_val() != 0) {
    set_action_val(from.action_val());
  }
  if (from.persistence() != 0) {
    set_persistence(from.persistence());
  }
  if (from.persistence_max() != 0) {
    set_persistence_max(from.persistence_max());
  }
}

void TargetInfo_WatchEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetInfo_WatchEntry::CopyFrom(const TargetInfo_WatchEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.TargetInfo.WatchEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetInfo_WatchEntry::IsInitialized() const {
  return true;
}

void TargetInfo_WatchEntry::Swap(TargetInfo_WatchEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetInfo_WatchEntry::InternalSwap(TargetInfo_WatchEntry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  relative_path_.Swap(&other->relative_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(action_, other->action_);
  swap(action_val_, other->action_val_);
  swap(persistence_, other->persistence_);
  swap(persistence_max_, other->persistence_max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetInfo_WatchEntry::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetInfo::kNameFieldNumber;
const int TargetInfo::kTypeFieldNumber;
const int TargetInfo::kSplitOffsetMsFieldNumber;
const int TargetInfo::kWatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetInfo::TargetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_TargetInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.TargetInfo)
}
TargetInfo::TargetInfo(const TargetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      watches_(from.watches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&split_offset_ms_) -
    reinterpret_cast<char*>(&type_)) + sizeof(split_offset_ms_));
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.TargetInfo)
}

void TargetInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_offset_ms_) -
      reinterpret_cast<char*>(&type_)) + sizeof(split_offset_ms_));
}

TargetInfo::~TargetInfo() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.TargetInfo)
  SharedDtor();
}

void TargetInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetInfo::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetInfo& TargetInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_TargetInfo.base);
  return *internal_default_instance();
}


void TargetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.TargetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watches_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_offset_ms_) -
      reinterpret_cast<char*>(&type_)) + sizeof(split_offset_ms_));
  _internal_metadata_.Clear();
}

bool TargetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.TargetInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.TargetInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.TargetType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Lazysplits::Proto::TargetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 split_offset_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &split_offset_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lazysplits.Proto.TargetInfo.WatchEntry watches = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_watches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.TargetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.TargetInfo)
  return false;
#undef DO_
}

void TargetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.TargetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.TargetInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .Lazysplits.Proto.TargetType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // sint32 split_offset_ms = 3;
  if (this->split_offset_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->split_offset_ms(), output);
  }

  // repeated .Lazysplits.Proto.TargetInfo.WatchEntry watches = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->watches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->watches(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.TargetInfo)
}

::google::protobuf::uint8* TargetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.TargetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.TargetInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .Lazysplits.Proto.TargetType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // sint32 split_offset_ms = 3;
  if (this->split_offset_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->split_offset_ms(), target);
  }

  // repeated .Lazysplits.Proto.TargetInfo.WatchEntry watches = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->watches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->watches(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.TargetInfo)
  return target;
}

size_t TargetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.TargetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lazysplits.Proto.TargetInfo.WatchEntry watches = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->watches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->watches(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Lazysplits.Proto.TargetType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // sint32 split_offset_ms = 3;
  if (this->split_offset_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->split_offset_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.TargetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.TargetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.TargetInfo)
    MergeFrom(*source);
  }
}

void TargetInfo::MergeFrom(const TargetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.TargetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  watches_.MergeFrom(from.watches_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.split_offset_ms() != 0) {
    set_split_offset_ms(from.split_offset_ms());
  }
}

void TargetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.TargetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetInfo::CopyFrom(const TargetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.TargetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetInfo::IsInitialized() const {
  return true;
}

void TargetInfo::Swap(TargetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetInfo::InternalSwap(TargetInfo* other) {
  using std::swap;
  CastToBase(&watches_)->InternalSwap(CastToBase(&other->watches_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(split_offset_ms_, other->split_offset_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetInfo::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchInfo_WatchArea::InitAsDefaultInstance() {
  ::Lazysplits::Proto::_WatchInfo_WatchArea_default_instance_._instance.get_mutable()->loc_ = const_cast< ::Lazysplits::Proto::UScalar2d*>(
      ::Lazysplits::Proto::UScalar2d::internal_default_instance());
  ::Lazysplits::Proto::_WatchInfo_WatchArea_default_instance_._instance.get_mutable()->size_ = const_cast< ::Lazysplits::Proto::UScalar2d*>(
      ::Lazysplits::Proto::UScalar2d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchInfo_WatchArea::kLocFieldNumber;
const int WatchInfo_WatchArea::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchInfo_WatchArea::WatchInfo_WatchArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_WatchArea.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.WatchInfo.WatchArea)
}
WatchInfo_WatchArea::WatchInfo_WatchArea(const WatchInfo_WatchArea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loc()) {
    loc_ = new ::Lazysplits::Proto::UScalar2d(*from.loc_);
  } else {
    loc_ = NULL;
  }
  if (from.has_size()) {
    size_ = new ::Lazysplits::Proto::UScalar2d(*from.size_);
  } else {
    size_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.WatchInfo.WatchArea)
}

void WatchInfo_WatchArea::SharedCtor() {
  ::memset(&loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&loc_)) + sizeof(size_));
}

WatchInfo_WatchArea::~WatchInfo_WatchArea() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.WatchInfo.WatchArea)
  SharedDtor();
}

void WatchInfo_WatchArea::SharedDtor() {
  if (this != internal_default_instance()) delete loc_;
  if (this != internal_default_instance()) delete size_;
}

void WatchInfo_WatchArea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WatchInfo_WatchArea::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchInfo_WatchArea& WatchInfo_WatchArea::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_WatchArea.base);
  return *internal_default_instance();
}


void WatchInfo_WatchArea::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.WatchInfo.WatchArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && loc_ != NULL) {
    delete loc_;
  }
  loc_ = NULL;
  if (GetArenaNoVirtual() == NULL && size_ != NULL) {
    delete size_;
  }
  size_ = NULL;
  _internal_metadata_.Clear();
}

bool WatchInfo_WatchArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.WatchInfo.WatchArea)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Lazysplits.Proto.UScalar2d loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.UScalar2d size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.WatchInfo.WatchArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.WatchInfo.WatchArea)
  return false;
#undef DO_
}

void WatchInfo_WatchArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.WatchInfo.WatchArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Lazysplits.Proto.UScalar2d loc = 1;
  if (this->has_loc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_loc(), output);
  }

  // .Lazysplits.Proto.UScalar2d size = 2;
  if (this->has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.WatchInfo.WatchArea)
}

::google::protobuf::uint8* WatchInfo_WatchArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.WatchInfo.WatchArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Lazysplits.Proto.UScalar2d loc = 1;
  if (this->has_loc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_loc(), deterministic, target);
  }

  // .Lazysplits.Proto.UScalar2d size = 2;
  if (this->has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_size(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.WatchInfo.WatchArea)
  return target;
}

size_t WatchInfo_WatchArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.WatchInfo.WatchArea)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Lazysplits.Proto.UScalar2d loc = 1;
  if (this->has_loc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loc_);
  }

  // .Lazysplits.Proto.UScalar2d size = 2;
  if (this->has_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *size_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchInfo_WatchArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.WatchInfo.WatchArea)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchInfo_WatchArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchInfo_WatchArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.WatchInfo.WatchArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.WatchInfo.WatchArea)
    MergeFrom(*source);
  }
}

void WatchInfo_WatchArea::MergeFrom(const WatchInfo_WatchArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.WatchInfo.WatchArea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_loc()) {
    mutable_loc()->::Lazysplits::Proto::UScalar2d::MergeFrom(from.loc());
  }
  if (from.has_size()) {
    mutable_size()->::Lazysplits::Proto::UScalar2d::MergeFrom(from.size());
  }
}

void WatchInfo_WatchArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.WatchInfo.WatchArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchInfo_WatchArea::CopyFrom(const WatchInfo_WatchArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.WatchInfo.WatchArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchInfo_WatchArea::IsInitialized() const {
  return true;
}

void WatchInfo_WatchArea::Swap(WatchInfo_WatchArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchInfo_WatchArea::InternalSwap(WatchInfo_WatchArea* other) {
  using std::swap;
  swap(loc_, other->loc_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WatchInfo_WatchArea::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchInfo_CharacterEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchInfo_CharacterEntry::kCharacterIndexFieldNumber;
const int WatchInfo_CharacterEntry::kCharacterValFieldNumber;
const int WatchInfo_CharacterEntry::kXPaddingFieldNumber;
const int WatchInfo_CharacterEntry::kYPaddingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchInfo_CharacterEntry::WatchInfo_CharacterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_CharacterEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.WatchInfo.CharacterEntry)
}
WatchInfo_CharacterEntry::WatchInfo_CharacterEntry(const WatchInfo_CharacterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  character_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.character_val().size() > 0) {
    character_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.character_val_);
  }
  ::memcpy(&character_index_, &from.character_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_padding_) -
    reinterpret_cast<char*>(&character_index_)) + sizeof(y_padding_));
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.WatchInfo.CharacterEntry)
}

void WatchInfo_CharacterEntry::SharedCtor() {
  character_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&character_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_padding_) -
      reinterpret_cast<char*>(&character_index_)) + sizeof(y_padding_));
}

WatchInfo_CharacterEntry::~WatchInfo_CharacterEntry() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.WatchInfo.CharacterEntry)
  SharedDtor();
}

void WatchInfo_CharacterEntry::SharedDtor() {
  character_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WatchInfo_CharacterEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WatchInfo_CharacterEntry::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchInfo_CharacterEntry& WatchInfo_CharacterEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_CharacterEntry.base);
  return *internal_default_instance();
}


void WatchInfo_CharacterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&character_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_padding_) -
      reinterpret_cast<char*>(&character_index_)) + sizeof(y_padding_));
  _internal_metadata_.Clear();
}

bool WatchInfo_CharacterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 character_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &character_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string character_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_character_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->character_val().data(), static_cast<int>(this->character_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.WatchInfo.CharacterEntry.character_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 x_padding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 y_padding = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.WatchInfo.CharacterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.WatchInfo.CharacterEntry)
  return false;
#undef DO_
}

void WatchInfo_CharacterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 character_index = 1;
  if (this->character_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->character_index(), output);
  }

  // string character_val = 2;
  if (this->character_val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->character_val().data(), static_cast<int>(this->character_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.WatchInfo.CharacterEntry.character_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->character_val(), output);
  }

  // sint32 x_padding = 3;
  if (this->x_padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->x_padding(), output);
  }

  // sint32 y_padding = 4;
  if (this->y_padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->y_padding(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.WatchInfo.CharacterEntry)
}

::google::protobuf::uint8* WatchInfo_CharacterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 character_index = 1;
  if (this->character_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->character_index(), target);
  }

  // string character_val = 2;
  if (this->character_val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->character_val().data(), static_cast<int>(this->character_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.WatchInfo.CharacterEntry.character_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->character_val(), target);
  }

  // sint32 x_padding = 3;
  if (this->x_padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->x_padding(), target);
  }

  // sint32 y_padding = 4;
  if (this->y_padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->y_padding(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.WatchInfo.CharacterEntry)
  return target;
}

size_t WatchInfo_CharacterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string character_val = 2;
  if (this->character_val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->character_val());
  }

  // uint32 character_index = 1;
  if (this->character_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->character_index());
  }

  // sint32 x_padding = 3;
  if (this->x_padding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x_padding());
  }

  // sint32 y_padding = 4;
  if (this->y_padding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->y_padding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchInfo_CharacterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchInfo_CharacterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchInfo_CharacterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.WatchInfo.CharacterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.WatchInfo.CharacterEntry)
    MergeFrom(*source);
  }
}

void WatchInfo_CharacterEntry::MergeFrom(const WatchInfo_CharacterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character_val().size() > 0) {

    character_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.character_val_);
  }
  if (from.character_index() != 0) {
    set_character_index(from.character_index());
  }
  if (from.x_padding() != 0) {
    set_x_padding(from.x_padding());
  }
  if (from.y_padding() != 0) {
    set_y_padding(from.y_padding());
  }
}

void WatchInfo_CharacterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchInfo_CharacterEntry::CopyFrom(const WatchInfo_CharacterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.WatchInfo.CharacterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchInfo_CharacterEntry::IsInitialized() const {
  return true;
}

void WatchInfo_CharacterEntry::Swap(WatchInfo_CharacterEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchInfo_CharacterEntry::InternalSwap(WatchInfo_CharacterEntry* other) {
  using std::swap;
  character_val_.Swap(&other->character_val_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(character_index_, other->character_index_);
  swap(x_padding_, other->x_padding_);
  swap(y_padding_, other->y_padding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WatchInfo_CharacterEntry::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchInfo_AdditionalOffsetEntry::InitAsDefaultInstance() {
  ::Lazysplits::Proto::_WatchInfo_AdditionalOffsetEntry_default_instance_._instance.get_mutable()->offset_ = const_cast< ::Lazysplits::Proto::UScalar2d*>(
      ::Lazysplits::Proto::UScalar2d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchInfo_AdditionalOffsetEntry::kCharacterLengthThresholdFieldNumber;
const int WatchInfo_AdditionalOffsetEntry::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchInfo_AdditionalOffsetEntry::WatchInfo_AdditionalOffsetEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_AdditionalOffsetEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
}
WatchInfo_AdditionalOffsetEntry::WatchInfo_AdditionalOffsetEntry(const WatchInfo_AdditionalOffsetEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_offset()) {
    offset_ = new ::Lazysplits::Proto::UScalar2d(*from.offset_);
  } else {
    offset_ = NULL;
  }
  character_length_threshold_ = from.character_length_threshold_;
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
}

void WatchInfo_AdditionalOffsetEntry::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&character_length_threshold_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(character_length_threshold_));
}

WatchInfo_AdditionalOffsetEntry::~WatchInfo_AdditionalOffsetEntry() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  SharedDtor();
}

void WatchInfo_AdditionalOffsetEntry::SharedDtor() {
  if (this != internal_default_instance()) delete offset_;
}

void WatchInfo_AdditionalOffsetEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WatchInfo_AdditionalOffsetEntry::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchInfo_AdditionalOffsetEntry& WatchInfo_AdditionalOffsetEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo_AdditionalOffsetEntry.base);
  return *internal_default_instance();
}


void WatchInfo_AdditionalOffsetEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && offset_ != NULL) {
    delete offset_;
  }
  offset_ = NULL;
  character_length_threshold_ = 0u;
  _internal_metadata_.Clear();
}

bool WatchInfo_AdditionalOffsetEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 character_length_threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &character_length_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.UScalar2d offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  return false;
#undef DO_
}

void WatchInfo_AdditionalOffsetEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 character_length_threshold = 1;
  if (this->character_length_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->character_length_threshold(), output);
  }

  // .Lazysplits.Proto.UScalar2d offset = 2;
  if (this->has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
}

::google::protobuf::uint8* WatchInfo_AdditionalOffsetEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 character_length_threshold = 1;
  if (this->character_length_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->character_length_threshold(), target);
  }

  // .Lazysplits.Proto.UScalar2d offset = 2;
  if (this->has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_offset(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  return target;
}

size_t WatchInfo_AdditionalOffsetEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Lazysplits.Proto.UScalar2d offset = 2;
  if (this->has_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *offset_);
  }

  // uint32 character_length_threshold = 1;
  if (this->character_length_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->character_length_threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchInfo_AdditionalOffsetEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchInfo_AdditionalOffsetEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchInfo_AdditionalOffsetEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
    MergeFrom(*source);
  }
}

void WatchInfo_AdditionalOffsetEntry::MergeFrom(const WatchInfo_AdditionalOffsetEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offset()) {
    mutable_offset()->::Lazysplits::Proto::UScalar2d::MergeFrom(from.offset());
  }
  if (from.character_length_threshold() != 0) {
    set_character_length_threshold(from.character_length_threshold());
  }
}

void WatchInfo_AdditionalOffsetEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchInfo_AdditionalOffsetEntry::CopyFrom(const WatchInfo_AdditionalOffsetEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchInfo_AdditionalOffsetEntry::IsInitialized() const {
  return true;
}

void WatchInfo_AdditionalOffsetEntry::Swap(WatchInfo_AdditionalOffsetEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchInfo_AdditionalOffsetEntry::InternalSwap(WatchInfo_AdditionalOffsetEntry* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(character_length_threshold_, other->character_length_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WatchInfo_AdditionalOffsetEntry::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchInfo::InitAsDefaultInstance() {
  ::Lazysplits::Proto::_WatchInfo_default_instance_._instance.get_mutable()->base_dimensions_ = const_cast< ::Lazysplits::Proto::UScalar2d*>(
      ::Lazysplits::Proto::UScalar2d::internal_default_instance());
  ::Lazysplits::Proto::_WatchInfo_default_instance_._instance.get_mutable()->area_ = const_cast< ::Lazysplits::Proto::WatchInfo_WatchArea*>(
      ::Lazysplits::Proto::WatchInfo_WatchArea::internal_default_instance());
  ::Lazysplits::Proto::_WatchInfo_default_instance_._instance.get_mutable()->color_ = const_cast< ::Lazysplits::Proto::RGBColor*>(
      ::Lazysplits::Proto::RGBColor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchInfo::kNameFieldNumber;
const int WatchInfo::kTypeFieldNumber;
const int WatchInfo::kBaseDimensionsFieldNumber;
const int WatchInfo::kAreaFieldNumber;
const int WatchInfo::kAdditionalAreaPaddingFieldNumber;
const int WatchInfo::kBaseThresholdFieldNumber;
const int WatchInfo::kColorFieldNumber;
const int WatchInfo::kImgRelativePathFieldNumber;
const int WatchInfo::kCharacterJustifyFieldNumber;
const int WatchInfo::kCharacterZOrderFieldNumber;
const int WatchInfo::kCharactersFieldNumber;
const int WatchInfo::kAdditionalOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchInfo::WatchInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lazysplits.Proto.WatchInfo)
}
WatchInfo::WatchInfo(const WatchInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      characters_(from.characters_),
      additional_offset_(from.additional_offset_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  img_relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.img_relative_path().size() > 0) {
    img_relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_relative_path_);
  }
  if (from.has_base_dimensions()) {
    base_dimensions_ = new ::Lazysplits::Proto::UScalar2d(*from.base_dimensions_);
  } else {
    base_dimensions_ = NULL;
  }
  if (from.has_area()) {
    area_ = new ::Lazysplits::Proto::WatchInfo_WatchArea(*from.area_);
  } else {
    area_ = NULL;
  }
  if (from.has_color()) {
    color_ = new ::Lazysplits::Proto::RGBColor(*from.color_);
  } else {
    color_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&base_threshold_) -
    reinterpret_cast<char*>(&type_)) + sizeof(base_threshold_));
  // @@protoc_insertion_point(copy_constructor:Lazysplits.Proto.WatchInfo)
}

void WatchInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_relative_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_dimensions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_threshold_) -
      reinterpret_cast<char*>(&base_dimensions_)) + sizeof(base_threshold_));
}

WatchInfo::~WatchInfo() {
  // @@protoc_insertion_point(destructor:Lazysplits.Proto.WatchInfo)
  SharedDtor();
}

void WatchInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_relative_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_dimensions_;
  if (this != internal_default_instance()) delete area_;
  if (this != internal_default_instance()) delete color_;
}

void WatchInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WatchInfo::descriptor() {
  ::protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchInfo& WatchInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LzsCvDataProtoCpp_2eproto::scc_info_WatchInfo.base);
  return *internal_default_instance();
}


void WatchInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Lazysplits.Proto.WatchInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characters_.Clear();
  additional_offset_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_relative_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_dimensions_ != NULL) {
    delete base_dimensions_;
  }
  base_dimensions_ = NULL;
  if (GetArenaNoVirtual() == NULL && area_ != NULL) {
    delete area_;
  }
  area_ = NULL;
  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_threshold_) -
      reinterpret_cast<char*>(&type_)) + sizeof(base_threshold_));
  _internal_metadata_.Clear();
}

bool WatchInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lazysplits.Proto.WatchInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.WatchInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.WatchType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Lazysplits::Proto::WatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.UScalar2d base_dimensions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.WatchInfo.WatchArea area = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.RGBColor color = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string img_relative_path = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_img_relative_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->img_relative_path().data(), static_cast<int>(this->img_relative_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lazysplits.Proto.WatchInfo.img_relative_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.CharacterJustify character_justify = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_character_justify(static_cast< ::Lazysplits::Proto::CharacterJustify >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lazysplits.Proto.CharacterZOrder character_z_order = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_character_z_order(static_cast< ::Lazysplits::Proto::CharacterZOrder >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lazysplits.Proto.WatchInfo.CharacterEntry characters = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_characters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry additional_offset = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_additional_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 additional_area_padding = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &additional_area_padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float base_threshold = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &base_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lazysplits.Proto.WatchInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lazysplits.Proto.WatchInfo)
  return false;
#undef DO_
}

void WatchInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lazysplits.Proto.WatchInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.WatchInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .Lazysplits.Proto.WatchType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .Lazysplits.Proto.UScalar2d base_dimensions = 3;
  if (this->has_base_dimensions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_base_dimensions(), output);
  }

  // .Lazysplits.Proto.WatchInfo.WatchArea area = 4;
  if (this->has_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_area(), output);
  }

  // .Lazysplits.Proto.RGBColor color = 5;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_color(), output);
  }

  // string img_relative_path = 6;
  if (this->img_relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->img_relative_path().data(), static_cast<int>(this->img_relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.WatchInfo.img_relative_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->img_relative_path(), output);
  }

  // .Lazysplits.Proto.CharacterJustify character_justify = 7;
  if (this->character_justify() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->character_justify(), output);
  }

  // .Lazysplits.Proto.CharacterZOrder character_z_order = 8;
  if (this->character_z_order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->character_z_order(), output);
  }

  // repeated .Lazysplits.Proto.WatchInfo.CharacterEntry characters = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->characters(static_cast<int>(i)),
      output);
  }

  // repeated .Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry additional_offset = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_offset_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->additional_offset(static_cast<int>(i)),
      output);
  }

  // uint32 additional_area_padding = 11;
  if (this->additional_area_padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->additional_area_padding(), output);
  }

  // float base_threshold = 12;
  if (this->base_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->base_threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lazysplits.Proto.WatchInfo)
}

::google::protobuf::uint8* WatchInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lazysplits.Proto.WatchInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.WatchInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .Lazysplits.Proto.WatchType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .Lazysplits.Proto.UScalar2d base_dimensions = 3;
  if (this->has_base_dimensions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_base_dimensions(), deterministic, target);
  }

  // .Lazysplits.Proto.WatchInfo.WatchArea area = 4;
  if (this->has_area()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_area(), deterministic, target);
  }

  // .Lazysplits.Proto.RGBColor color = 5;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_color(), deterministic, target);
  }

  // string img_relative_path = 6;
  if (this->img_relative_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->img_relative_path().data(), static_cast<int>(this->img_relative_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lazysplits.Proto.WatchInfo.img_relative_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->img_relative_path(), target);
  }

  // .Lazysplits.Proto.CharacterJustify character_justify = 7;
  if (this->character_justify() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->character_justify(), target);
  }

  // .Lazysplits.Proto.CharacterZOrder character_z_order = 8;
  if (this->character_z_order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->character_z_order(), target);
  }

  // repeated .Lazysplits.Proto.WatchInfo.CharacterEntry characters = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->characters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry additional_offset = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_offset_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->additional_offset(static_cast<int>(i)), deterministic, target);
  }

  // uint32 additional_area_padding = 11;
  if (this->additional_area_padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->additional_area_padding(), target);
  }

  // float base_threshold = 12;
  if (this->base_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->base_threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lazysplits.Proto.WatchInfo)
  return target;
}

size_t WatchInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lazysplits.Proto.WatchInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lazysplits.Proto.WatchInfo.CharacterEntry characters = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->characters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->characters(static_cast<int>(i)));
    }
  }

  // repeated .Lazysplits.Proto.WatchInfo.AdditionalOffsetEntry additional_offset = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->additional_offset_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->additional_offset(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string img_relative_path = 6;
  if (this->img_relative_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->img_relative_path());
  }

  // .Lazysplits.Proto.UScalar2d base_dimensions = 3;
  if (this->has_base_dimensions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_dimensions_);
  }

  // .Lazysplits.Proto.WatchInfo.WatchArea area = 4;
  if (this->has_area()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *area_);
  }

  // .Lazysplits.Proto.RGBColor color = 5;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // .Lazysplits.Proto.WatchType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .Lazysplits.Proto.CharacterJustify character_justify = 7;
  if (this->character_justify() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->character_justify());
  }

  // .Lazysplits.Proto.CharacterZOrder character_z_order = 8;
  if (this->character_z_order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->character_z_order());
  }

  // uint32 additional_area_padding = 11;
  if (this->additional_area_padding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->additional_area_padding());
  }

  // float base_threshold = 12;
  if (this->base_threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lazysplits.Proto.WatchInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lazysplits.Proto.WatchInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lazysplits.Proto.WatchInfo)
    MergeFrom(*source);
  }
}

void WatchInfo::MergeFrom(const WatchInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lazysplits.Proto.WatchInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characters_.MergeFrom(from.characters_);
  additional_offset_.MergeFrom(from.additional_offset_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.img_relative_path().size() > 0) {

    img_relative_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_relative_path_);
  }
  if (from.has_base_dimensions()) {
    mutable_base_dimensions()->::Lazysplits::Proto::UScalar2d::MergeFrom(from.base_dimensions());
  }
  if (from.has_area()) {
    mutable_area()->::Lazysplits::Proto::WatchInfo_WatchArea::MergeFrom(from.area());
  }
  if (from.has_color()) {
    mutable_color()->::Lazysplits::Proto::RGBColor::MergeFrom(from.color());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.character_justify() != 0) {
    set_character_justify(from.character_justify());
  }
  if (from.character_z_order() != 0) {
    set_character_z_order(from.character_z_order());
  }
  if (from.additional_area_padding() != 0) {
    set_additional_area_padding(from.additional_area_padding());
  }
  if (from.base_threshold() != 0) {
    set_base_threshold(from.base_threshold());
  }
}

void WatchInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lazysplits.Proto.WatchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchInfo::CopyFrom(const WatchInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lazysplits.Proto.WatchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchInfo::IsInitialized() const {
  return true;
}

void WatchInfo::Swap(WatchInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchInfo::InternalSwap(WatchInfo* other) {
  using std::swap;
  CastToBase(&characters_)->InternalSwap(CastToBase(&other->characters_));
  CastToBase(&additional_offset_)->InternalSwap(CastToBase(&other->additional_offset_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  img_relative_path_.Swap(&other->img_relative_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(base_dimensions_, other->base_dimensions_);
  swap(area_, other->area_);
  swap(color_, other->color_);
  swap(type_, other->type_);
  swap(character_justify_, other->character_justify_);
  swap(character_z_order_, other->character_z_order_);
  swap(additional_area_padding_, other->additional_area_padding_);
  swap(base_threshold_, other->base_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WatchInfo::GetMetadata() const {
  protobuf_LzsCvDataProtoCpp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LzsCvDataProtoCpp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Lazysplits
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::UScalar2d* Arena::CreateMaybeMessage< ::Lazysplits::Proto::UScalar2d >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::UScalar2d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::RGBColor* Arena::CreateMaybeMessage< ::Lazysplits::Proto::RGBColor >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::RGBColor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::GameList_GameEntry* Arena::CreateMaybeMessage< ::Lazysplits::Proto::GameList_GameEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::GameList_GameEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::GameList* Arena::CreateMaybeMessage< ::Lazysplits::Proto::GameList >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::GameList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::GameInfo_TargetEntry* Arena::CreateMaybeMessage< ::Lazysplits::Proto::GameInfo_TargetEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::GameInfo_TargetEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::GameInfo* Arena::CreateMaybeMessage< ::Lazysplits::Proto::GameInfo >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::GameInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::TargetInfo_WatchEntry* Arena::CreateMaybeMessage< ::Lazysplits::Proto::TargetInfo_WatchEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::TargetInfo_WatchEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::TargetInfo* Arena::CreateMaybeMessage< ::Lazysplits::Proto::TargetInfo >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::TargetInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::WatchInfo_WatchArea* Arena::CreateMaybeMessage< ::Lazysplits::Proto::WatchInfo_WatchArea >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::WatchInfo_WatchArea >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::WatchInfo_CharacterEntry* Arena::CreateMaybeMessage< ::Lazysplits::Proto::WatchInfo_CharacterEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::WatchInfo_CharacterEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry* Arena::CreateMaybeMessage< ::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::WatchInfo_AdditionalOffsetEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Lazysplits::Proto::WatchInfo* Arena::CreateMaybeMessage< ::Lazysplits::Proto::WatchInfo >(Arena* arena) {
  return Arena::CreateInternal< ::Lazysplits::Proto::WatchInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

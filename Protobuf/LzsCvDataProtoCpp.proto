syntax = "proto3";

package Lazysplits.Proto;

enum TargetType{
	TGT_UNUSED = 0;
	TGT_RESET = 1;
	TGT_START = 2;
	TGT_STANDARD = 3;
	TGT_END = 4;
}
enum WatchType{
	WT_UNUSED = 0;
	WT_COLOR = 1;
	WT_IMAGE_STATIC = 2;
	WT_CHARACTER_SET = 3;
}

enum WatchAction{
	WA_UNUSED = 0;
	WA_INCREMENT_INDEX = 1;
	WA_DECREMENT_INDEX = 2;
	WA_GOTO_INDEX = 3;
	WA_COMPLETE = 4;
}

enum WatchPersistence{
	WP_NONE = 0;
	WP_SPECIFY_MAX = 1;
	WP_TOTAL = 2;
}

enum CharacterJustify{
	CHARACTER_JUSTIFY_UNUSED = 0;
	CHARACTER_JUSTIFY_LEFT = 1;
	CHARACTER_JUSTIFY_RIGHT = 2;
}

enum CharacterZOrder{
	CHARACTER_Z_UNUSED = 0;
	CHARACTER_Z_LEFT_TO_RIGHT = 1;
	CHARACTER_Z_RIGHT_TO_LEFT = 2;
}

message UScalar2d{
	sint32 x = 1;
	sint32 y = 2;
}
message RGBColor{
	uint32 R = 1;
	uint32 G = 2;
	uint32 B = 3;
}

message GameList{
	message GameEntry{
		string name = 1;
		string relative_path = 2;
	}

	repeated GameEntry games = 1;
}

message GameInfo{
	message TargetEntry{
		string name = 1;
		string relative_path = 2;
	}

	string name = 1;
	repeated TargetEntry targets = 2;
}

message TargetInfo{
	message WatchEntry{
		string name = 1;
		string relative_path = 2;
		sint32 index = 3;
		WatchAction action = 4;
		uint32 action_val = 5;
		WatchPersistence persistence = 6;
		uint32 persistence_max = 7;
	}

	string name = 1;
	TargetType type = 2;
	sint32 split_offset_ms = 3;
	repeated WatchEntry watches = 4;
}

message WatchInfo{
	message WatchArea{
		UScalar2d loc = 1;
		UScalar2d size = 2;
	}

	string name = 1;
	WatchType type = 2;
	UScalar2d base_dimensions = 3;
	WatchArea area = 4;
	uint32 additional_area_padding = 11;
	float base_threshold = 12;

	//color watch specific
	RGBColor color = 5;

	//static image/character set specific
	string img_relative_path = 6;

	//character set specific
	message CharacterEntry{
		uint32 character_index = 1;
		string character_val = 2;
		sint32 x_padding = 3;
		sint32 y_padding = 4;
	}
	message AdditionalOffsetEntry{
		uint32 character_length_threshold = 1;
		UScalar2d offset = 2;
	}
	CharacterJustify character_justify = 7;
	CharacterZOrder character_z_order = 8;
	repeated CharacterEntry characters = 9;
	repeated AdditionalOffsetEntry additional_offset = 10;
}